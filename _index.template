<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>The #BioCitationNeeded project</title>
    <link href="style.css" rel="stylesheet">
    <script src="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.3/d3.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/topojson/1.6.9/topojson.min.js"></script>
    <script src="datamaps.world.min.js"></script>
  </head>
  <body onload="colormap(document.getElementById('tag').value)">
    <a style="float:right" target="_blank" href="https://gist.github.com/thedod/70f3e820380598c352c3">Fork this</a>
    <h2>The #BioCitationNeeded project</h2>
  
    <p>The only non-repetitive stuff is at <a href="#il">Israel</a> and <a href="#gb">UK</a>, but I hope the
    standard of <code>citations.json</code> is simple and flexible enough for what we need.</p>
    <p>Map has a crazy projection so that Israel won't come out too small for fill color ;)
    Problem is that now it crops some countries. Better solutions are welcome.</p>
    <div style="text-align:center">
      <select id="tag" onchange="colormap(this.value)">
          <option selected value="">--select topic--</option>
          {{#tags}}
            {{#description}}{{! skip intro }}
              <option value="{{name}}">{{description}}
            {{/description}}
          {{/tags}}
      </select>
      <div id="worldmap" style="margin:0 auto; position:relative; width: 900px; height: 400px"></div>
    </div>
    <ul>
      {{#countries}}
        <dl>
          <dt id="{{id}}"><a href="country-{{id}}.html">{{name}}</a></dt>
          <dd>
            <ul>
              {{#citations}}
                {{#value}}
                  <li>{{tag.description}}: <span{{#styling}} class="{{.}}"{{/styling}}>{{{.}}}</span></li>
                {{/value}}
              {{/citations}}
            </ul>
          </dd>
        </dl>
      {{/countries}}
    </ul>
    <script>
      var map_data = {
        {{#countries}}
          {{mapid}}: {
            fillKey: "defaultFill",
            {{#citations}}
            {{#styling}}
              {{tag.name}}: "{{styling}}",
            {{/styling}}
            {{/citations}}
          },
        {{/countries}}
      };
      var slugs = {
        {{#countries}}
          {{mapid}}: "{{id}}",
        {{/countries}}
      };
      var map = new Datamap({
        element: document.getElementById('worldmap'),
        fills: {
          defaultFill: "#7F7F7F",
          good: "#00FF00",
          bad: "#FF0000"
        },
        data: map_data,
        hideAntarctica: true,
        // This projection is a tweak so that Israel doesn't look too small
        // but it crops out stuff. To do: something better.
        setProjection: function(element) {
          var projection = d3.geo.conicEquidistant()
            .center([31.3, 34.5])
            .scale(300)
            .translate([element.clientWidth / 2, element.clientHeight / 2])
            .precision(.1);
          var path = d3.geo.path()
            .projection(projection);
          return {path: path, projection: projection};
       },
       geographyConfig: {
         highlightFillColor: '#FFFF00'
       },
       done: function(datamap) {
         var svg = datamap.svg;
         svg.selectAll('.datamaps-subunit').on('click', function(d) {
           location.href='country-'+slugs[d.id]+'.html';
         });
       }
      });

      function colormap(tag) {
        var colors = {}
        for (country in map_data) {
          colors[country] = { fillKey: map_data[country][tag] || "defaultFill" };
        }
        map.updateChoropleth(colors);
      }
    </script>
  </body>
</html>
